{
  "connectionTest": {
    "main": {
      "message": "Hello, this is a connection test.",
      "temperature": 0.7,
      "maxTokens": 100,
      "useFastModel": false
    },
    "fast": {
      "message": "Test",
      "temperature": 0.7,
      "maxTokens": 50,
      "useFastModel": true
    }
  },
  "toolSelection": {
    "stage1": {
      "template": "You are a helpful assistant that can use tools to help users.\n\nUser request: \"{userRequest}\"\n\nAvailable tools:\n{toolNames}\n\nINSTRUCTIONS:\n1. Check if the user's request matches any tool's \"USE WHEN\" criteria\n2. If a tool matches, respond with: {\"tool\": \"tool_name\"}\n3. If no tool matches, respond with: {\"tool\": null}\n\nRESPOND WITH ONLY THE JSON, NO OTHER TEXT.\n\nResponse:",
      "temperature": 0.1,
      "maxTokens": 100,
      "useFastModel": true
    }
  },
  "argumentGeneration": {
    "fastModel": {
      "template": "Generate tool arguments from user request.\n\nTool: {toolName}\nUser request: \"{userRequest}\"\n\nParameters:\n{params}\n\nCommon patterns:\n- For directory operations: use \".\" for current directory\n- For file_mask patterns: use glob patterns like \"*\", \"*.js\", \"config.*\" (NOT regex like \".*\")\n- For boolean flags: true if mentioned (recursive, etc.)\n- OMIT optional parameters that have good defaults unless user specifically requests different values\n\nRespond ONLY with JSON: {\"args\": {\"param\": \"value\"}}\n\nResponse:",
      "temperature": 0.1,
      "useFastModel": true
    },
    "fullModel": {
      "template": "You are a helpful assistant that generates tool arguments.\n\nUser request: \"{userRequest}\"\nSelected tool: {toolName}\n\nTool description: {toolDescription}\n\nParameters:\n{params}\n\nINSTRUCTIONS:\n1. Extract arguments from the user's request based on the tool's parameter requirements\n2. Use relative paths (e.g., \".\" for current directory) and appropriate boolean values\n3. For complex tools, carefully consider parameter relationships and validation\n4. Respond with: {\"args\": {\"param1\": \"value1\", \"param2\": \"value2\"}}\n\nRESPOND WITH ONLY THE JSON, NO OTHER TEXT.\n\nResponse:",
      "temperature": 0.1,
      "useFastModel": false
    }
  },
  "codeCompletion": {
    "completion": {
      "template": "You are an efficient code completion assistant. Your goal is to save the developer time by writing as much useful, correct code as possible.\n\nFile: {filePath}\nCode before cursor: {codeBeforeCursor}\nCode after cursor: {codeSuffix}\n\nYour response must start with the exact text \"{codeBeforeCursor}\" character-for-character, then continue with your completion, and include the suffix \"{codeSuffix}\". Provide a meaningful completion that implements or extends the code logically. Write clean, well-typed code.\n\nIMPORTANT: Respond with plain text only. Do not use code blocks, markdown formatting, or backticks. Do not add explanations or comments after the code. Only provide the completed code.",
      "temperature": 0.3,
      "maxTokens": 500,
      "useFastModel": false
    }
  },
  "toolGuidance": {
    "usageHints": {
      "list_dir": "USE WHEN: user asks \"what files are in\", \"list files\", \"show directory contents\", \"what's in this folder\"",
      "find_file": "USE WHEN: user wants to find files by NAME/PATH/EXTENSION only, like \"find config.json\", \"find *.js files\", \"where is package.json\" - NOT for searching file contents",
      "search_for_pattern": "USE WHEN: user wants to search for TEXT/CONTENT/PATTERNS inside files, like \"search for TODO\", \"find all console.log\", \"search for function definitions\", \"search for any text/symbols/characters\" - use this for content searches, OR when user wants to see contents of a specific file, asks what a file does, asks about a file's functionality, or wants to understand a file",
      "get_symbols_overview": "USE WHEN: user wants to understand the structure/symbols in code files",
      "find_symbol": "USE WHEN: user is looking for specific functions, classes, or variables in code",
      "replace_symbol_body": "USE WHEN: user wants to modify/replace specific functions or code blocks",
      "get-library-docs": "USE WHEN: user asks about documentation for a specific library or framework"
    },
    "fastModelTools": [
      "list_dir",
      "find_file"
    ]
  },
  "responseGeneration": {
    "toolResultsStreaming": {
      "template": "Tool Execution Results:\n{toolResults}\nIMPORTANT: The tools above were executed on your codebase. Even if a tool returned no results, it means the operation was performed successfully. Based on the tool execution results above, provide a helpful and accurate response to the user."
    },
    "toolResultsNonStreaming": {
      "template": "Tool Results:\n{toolResults}\nBased on the tool results above, provide a helpful and accurate response to the user. Summarize the information clearly and answer their question."
    }
  },
  "systemMessages": {
    "mcpInitializing": {
      "template": "Local MCP Hub is still initializing the code analysis tools (Serena & Context7). This usually takes 10-30 seconds after startup. Please try your request again in a moment.\n\nCurrent status:\n- Hub server: Running\n- Ollama connection: Connected\n- MCP tools: Loading...\n\nYou can check initialization status at: http://localhost:{port}/health"
    },
    "toolPermissionError": {
      "template": "I'd like to use the {toolName} tool to answer your question, but I encountered an error: {error}. Would you like me to try a different approach?"
    },
    "toolPermissionRequest": {
      "template": "I'd like to use the {toolName} tool with these parameters: {args}. This tool may modify files or system state. Would you like me to proceed? (Please respond with 'yes' to continue or 'no' to cancel)"
    }
  }
}